@page
@model WebClient.Pages.ResetPasswordModel
@{
    Layout = "_EmptyLayout";
}
<div class="px-4 py-5 px-md-5 text-center text-lg-start min-vh-100" style="background-color: hsl(0, 0%, 96%)">
    <div class="container">
        <div class="row gx-lg-5 align-items-center">
            <div class="col-lg-6 mb-5 mb-lg-0">
                <h1 class="my-5 display-3 fw-bold ls-tight">
                    The best offer <br />
                    <span class="text-primary">for your business</span>
                </h1>
                <p style="color: hsl(217, 10%, 50.8%)">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit.
                    Eveniet, itaque accusantium odio, soluta, corrupti aliquam
                    quibusdam tempora at cupiditate quis eum maiores libero
                    veritatis? Dicta facilis sint aliquid ipsum atque?
                </p>
            </div>

            <div class="col-lg-6 mb-5 mb-lg-0">
                <div class="card">
                    <div class="card-body pt-5 pb-4 px-md-5">
                        <h2>Create new account</h2>
                        <form method="post" id="resetForm">
                            <div data-mdb-input-init class=" mb-4">
                                <input type="password" asp-for="Password.NewPassword" id="password" class="form-control" placeholder="Password" />
                                <span asp-validation-for="Password.NewPassword" class="text-danger"></span>
                            </div>

                            <div data-mdb-input-init class=" mb-4">
                                <input type="password" id="confirm_password" asp-for="Password.ConfirmPassword" class="form-control" placeholder="Confirm Password" />
                                <span asp-validation-for="Password.ConfirmPassword" id="confirm_password_error" class="text-danger"></span>
                            </div>
                            <button type="submit" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-block w-100 fs-4 fw-bolder" onclick="HandlerSubmit()">
                                Confirm
                            </button>
                            <span id="error" class="text-danger"></span>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
	<script>
        var email = localStorage.getItem("email");
        var otp = localStorage.getItem("otp");
        function HandlerSubmit(){
            if(email == null){
                $("#error").text("Email is not found");
                return;
            }
            $('#resetForm').submit();
        }

        $(document).ready(function () {
            $('#resetForm').on('submit', function (e) {
                e.preventDefault();
                const form = $(this);
                if (typeof form.validate === "function") {
                    form.validate();
                    if (!form.valid() || !IsMatchPassword()) {
                        return;
                    }
                }

                const formData = {
                    newPassword: $('#password').val(),
                    confirmPassword: $('#confirm_password').val(),
                    email: email,
                    otp: otp
                }

                console.log(email);
                $.ajax({
                    url: 'http://localhost:5050/api/auth/reset-password',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function (result) {
                        if(result.status == 200){
                            $('#error').text('');
                            window.location.href = "/login";
                        }else{
                            $('#error').text(result.message || "Reset failed.");
                        }
                    },
                    error: function (xhr) {
                        let errorMsg = "Registration failed.";
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMsg = xhr.responseJSON.message;
                        } else if (xhr.responseText) {
                            try {
                                const resp = JSON.parse(xhr.responseText);
                                if (resp.message) errorMsg = resp.message;
                            } catch {}
                        }
                        $('#error').text(errorMsg);
                    }
                });
            });

            $('#confirm_password').on('input', function () {
                IsMatchPassword();
            });

            function IsMatchPassword(){
                const password = $('#password').val();
                const confirmPassword = $('#confirm_password').val();
                if (password !== confirmPassword) {
                    $('#confirm_password_error').text('Passwords do not match');
                    return false;
                } else {
                    $('#confirm_password_error').text('');
                    return true;
                }
            }
        });
	</script>
}