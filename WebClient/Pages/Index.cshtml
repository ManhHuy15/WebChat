@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<style>
    .chat-sidebar {
        width: 22em;
        overflow-y: auto;
        background-color: #1f1f1f;
        margin: 1rem 1rem 1rem 0;
		border-radius: 0.5rem;
    }

    .chat-item{
        background-color: transparent;
    }

    .chat-item:hover {
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 0.5rem;
    }

    .chat-item.active {
        background-color: rgba(255, 255, 255, 0.1);
        color: #212529;
        border-width: 0;
        border-radius: 0.5rem;
        border-top-width: 0px !important;
    }

    .chat-content {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        background-color: #1f1f1f;
        margin: 1rem 1rem 1rem 0;
        border-radius: 0.5rem
    }

    .chat-header {
        border-bottom: 1px solid black;
        padding: 1rem;
        background-color: #1f1f1f;
        border-radius: 0.5rem 0.5rem 0 0;
    }

    .chat-messages {
        flex-grow: 1;
        overflow-y: auto;
        padding: 1rem;
        background-color: #252728;
    }

    .chat-footer {
        border-top: 1px solid black;
        padding: 0.75rem;
        background-color: #1f1f1f;
        border-radius: 0 0 0.5rem 0.5rem;
    }

    .my-mes-bubble {
        max-width: 70%;
        background-color: #e0f0ff;
        padding: 8px 12px;
        border-radius: 8px;
        margin-bottom: 5px;
        align-self: flex-end;
    }

	.other-mes-bubble {
		max-width: 70%;
        background-color: #2c2c2c;
		padding: 8px 12px;
		border-radius: 8px;
		margin-bottom: 5px;
		align-self: flex-start;
        color : white;
	}

    .message-time {
        font-size: 0.8rem;
        color: gray;
        align-self: center;
    }

    .avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        object-fit: cover;
    }
</style>

<div class="d-flex h-100">
    <div class="chat-sidebar d-flex flex-column">
        <div class="p-3 d-flex align-items-center justify-content-between">
            <div class="input-group rounded w-75">
                <input type="search" class="form-control rounded  " placeholder="Search" aria-label="Search" aria-describedby="search-addon" />
            </div>
            <div class="p-2 ">
                <i class="fas fa-users fs-5 text-white"></i>
            </div>
        </div>

        <div class="list-group list-group-flush flex-grow-1 px-2" id="chatList">
        </div>
    </div>

    <div id="chat-content" class="chat-content text-white  d-flex flex-column">
        <div class="chat-header d-flex justify-content-between align-items-center">
            <div class="d-flex gap-2">
                <img id="chat-avatar" src="https://scontent.fhan15-1.fna.fbcdn.net/v/t39.30808-6/482019444_122183994404333369_5508670626021919815_n.png?stp=dst-jpg_tt6&_nc_cat=109&ccb=1-7&_nc_sid=2285d6&_nc_ohc=6Wm8HoVrr7YQ7kNvwHAcI2-&_nc_oc=AdndOHVw3uGmQPQe8GJR0VlBYXB-B8Oz49gzWSTKb3zb61Bwfnc_SYEQSf3NtGfGGwk&_nc_zt=23&_nc_ht=scontent.fhan15-1.fna&_nc_gid=_7k3Dmuxuu1TZTW0kieKqA&oh=00_AfNPJihpfAgRqDEA3_3Jiem3JZtvAvVgBiPrCg1OCXWSVQ&oe=6854629C" class="avatar" alt="">
                <div>
                    <h6 class="mb-0" id="chat-name">Cloud của tôi</h6>
                    <small class="text-muted">Lưu và đồng bộ dữ liệu giữa các thiết bị</small>
                    <input type="hidden" id="chat-id" />
                </div>
            </div>
        </div>

        <div id="chat-messages" class="chat-messages d-flex flex-column">
            <div class="text-center text-muted my-2"><small>T7 31/05/2025</small></div>
            <div class="d-flex flex-column align-items-end">
                <div class="my-mes-bubble">Ảnh</div>
                <div class="my-mes-bubble">À</div>
                <div class="my-mes-bubble">Bsbsa</div>
                <div class="my-mes-bubble">Nhanba</div>
                <small class="message-time">15:14</small>
            </div>
        </div>

        <div class="chat-footer">
            <div class="d-flex align-items-center gap-2">
                <i class="bi bi-image fs-5"></i>
                <i class="bi bi-paperclip fs-5"></i>
                <input type="text" class="form-control" placeholder="Nhập , tin nhắn tới Cloud của tôi">
                <i class="bi bi-emoji-smile fs-5"></i>
                <i class="bi bi-hand-thumbs-up-fill text-primary fs-5" id="btn-send"></i>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    $(function () {
        $('#chatList').on('click', '.chat-item', function (e) {
            e.preventDefault();
            $('.chat-item').removeClass('active');
            $(this).addClass('active');
        });


        $('#btn-send').on('click', async function (e) {
            e.preventDefault();
            const reciverId = $('#chat-id').val();
            if (!reciverId) return;
            try {
                await connection.invoke('SendMessage', reciverId);
            } catch (err) {
                console.error('SignalR SendMessageToUser error:', err);
            }
        });

        window.openChat = function(id, name, avatar ,type ){
            if(type == 0){
                var chatName = $('#chat-name');
                var chatAvatar = $('#chat-avatar');
                var userId = $('#chat-id');

                chatAvatar.attr('src', avatar);
                chatName.text(name);
                userId.val(id);
                fetchMessageUser(id);
            }else if( type == 1){

            }
        }

        fetchChatItem();
        function fetchChatItem(){
            $.ajax({
                url: API_URL + '/api/Message/list-chat',
                type: 'GET',
                contentType: 'application/json',
                success : function( result ){
                    if(result.success){
                        var data = result.data;
                        var chatList = $('#chatList');
                        chatList.empty();
                            console.log(result.data);
                            data.forEach(function (item, index) {
                                var chatItem = $(`
                                        <a href="#" class="list-group-item list-group-item-action text-white d-flex gap-2 align-items-center chat-item ${index === 0 ? 'active' : ''}" onclick="openChat(${item.id},'${item.name}', ${item.avatar},${item.type})">
                                    <img src="https://scontent.fhan15-1.fna.fbcdn.net/v/t39.30808-6/482019444_122183994404333369_5508670626021919815_n.png?stp=dst-jpg_tt6&_nc_cat=109&ccb=1-7&_nc_sid=2285d6&_nc_ohc=6Wm8HoVrr7YQ7kNvwHAcI2-&_nc_oc=AdndOHVw3uGmQPQe8GJR0VlBYXB-B8Oz49gzWSTKb3zb61Bwfnc_SYEQSf3NtGfGGwk&_nc_zt=23&_nc_ht=scontent.fhan15-1.fna&_nc_gid=_7k3Dmuxuu1TZTW0kieKqA&oh=00_AfNPJihpfAgRqDEA3_3Jiem3JZtvAvVgBiPrCg1OCXWSVQ&oe=6854629C" class="avatar" alt="">
                                    <div class="flex-grow-1">
                                        <div class="d-flex justify-content-between">
                                            <strong>${item.name}</strong>
                                            <small class="text-muted">${timeToNow(item.time)}</small>
                                        </div>
                                        <div class="text-muted text-truncate">${item.contentPreview}</div>
                                    </div>
                                </a>
                            `);
                              
                                chatList.append(chatItem);
                            });

                            fetchMessageUser(data[0].id)
                    }else{
                        console.error(result.message);
                    }
                },
                error: function (error){
                    console.error("Error fetching chat items:", error);
                }
            })
        }

        function fetchMessageUser(reciverId){
            $.ajax({
                url: API_URL + `/api/Message/get-messages/${reciverId}`,
				type: 'GET',
				contentType: 'application/json',
				success : function(result){
                    console.log(result);
					if(result.success ){
                        var data = result.data;
                        var chatList = $('#chat-messages');
                       
						chatList.empty();
						data.forEach(function (item, index) {
							var chatItem = $(`
								<div class="d-flex flex-column text-black align-items-end">
                                    ${item.receiver.userId == reciverId ? `<div class="align-self-start text-muted"><small>${item.receiver.fullName}</small></div>` : ''}
                                    <div class="${item.receiver.userId == reciverId ? 'other-mes-bubble' : 'my-mes-bubble'}">${item.content}</div>
                                    ${ index == data.length - 2 ? `<small class="message-time">${timeToNow(item.sentAt)}</small>` : '' }
								</div>
							`);
							chatList.append(chatItem);
						});

					}else{
                    }
				},
				error: function (error){
					console.error("Error fetching chat items:", error);
				}
            });
        }
    });

  

    function timeToNow(time) {
        var inputDate = new Date(time);
        var now = new Date();
        var diffMs = now - inputDate;
        var diffSec = Math.floor(diffMs / 1000);
        var diffMin = Math.floor(diffSec / 60);
        var diffHour = Math.floor(diffMin / 60);
        var diffDay = Math.floor(diffHour / 24);

        if (diffHour >= 24) {
            var day = inputDate.getDate().toString().padStart(2, '0');
            var month = (inputDate.getMonth() + 1).toString().padStart(2, '0');
            return `${day}/${month}`;
        } else if (diffHour >= 1) {
            return `${diffHour} giờ`;
        } else if (diffMin >= 1) {
            return `${diffMin} phút`;
        } else {
            return `Vừa xong`;
        }
    }

</script>
}

