@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<style>
    .chat-sidebar {
        width: 22em;
        overflow-y: auto;
        background-color: #1f1f1f;
        margin: 0 1rem 0 0;
		border-radius: 0.5rem;
        height: 95vh;
    }

    .chat-item{
        background-color: transparent;
    }

    .chat-item:hover {
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 0.5rem;
    }

    .chat-item.active {
        background-color: rgba(255, 255, 255, 0.1);
        color: #212529;
        border-width: 0;
        border-radius: 0.5rem;
        border-top-width: 0px !important;
    }

    .chat-detail{
        background-color: #1f1f1f;
        margin: 0 1rem 0 0;
        border-radius: 0.5rem;
        height: 95vh;
    }

    .chat-detail-files{
        overflow-y: auto;
        max-height: 50vh;
    }
    .file-item {
        width: 100%;
        aspect-ratio: 1 / 1; /* Giữ khung vuông */
        overflow: hidden;
        border-radius: 10px;
        background-color: #2a2a2a;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .file-item img,
    .file-item video,
    .file-item audio {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
        max-width: 100%;
        border-radius: 6px;
    }
</style>

<link rel="stylesheet" href="~/css/chatting.css" asp-append-version="true" />
<div class="d-flex h-100 py-3">
    <div class="chat-sidebar d-flex flex-column">
        <div class="p-3 d-flex align-items-center justify-content-between">
            <div class="input-group rounded w-75">
                <input type="search" class="form-control rounded  " placeholder="Search" aria-label="Search" aria-describedby="search-addon" />
            </div>
            <div class="p-2" id="createGroupPopup">
                <i class="fas fa-users fs-5 text-white"></i>
            </div>
        </div>

        <div class="list-group list-group-flush flex-grow-1 px-2" id="chatList">
        </div>
    </div>

    <div id="chat-content" class="chat-content text-white  d-flex flex-column">
        <div class="chat-header d-flex justify-content-between align-items-center">
            <div class="d-flex gap-2">
                <img id="chat-avatar" src="#" class="avatar" alt="">
                <div>
                    <h6 class="mb-0" id="chat-name">Cloud của tôi</h6>
                    <small class="text-muted">Lưu và đồng bộ dữ liệu giữa các thiết bị</small>
                    <input type="hidden" id="chat-id" />
                    <input type="hidden" id="chat-type" />
                </div>
            </div>
            <div>
                <button type="button" class="btn bg-transparent shadow-none rounded-circle" id="btn-open-chat-detail">
                    <i class="bi bi-chevron-double-left fs-6"></i>
                </button>
            </div>
        </div>

        <div id="chat-messages" class="chat-messages d-flex flex-column">
            <div id="loading-spinner" class="text-center my-2" style="display: none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        </div>

        <div class="chat-footer">
            <div id="preview-wrapper" class="mb-2 d-flex gap-2 flex-wrap"></div>

            <div class="d-flex align-items-center gap-2">
                <input type="file" id="file-input" multiple class="d-none"  accept="image/*,video/*,.pdf,.doc,.docx,.txt">
                <i class="bi bi-paperclip fs-5 text-primary" role="button" id="btn-select-file"></i>
                <input type="text" class="form-control" id="chat-input" placeholder="Nhập tin nhắn tới Cloud của tôi">
                <i class="fas fa-paper-plane fs-5 text-primary" id="btn-send" role="button"></i>
            </div>
        </div>
    </div>

    <div id="chat-detail" class="chat-detail w-25 d-none text-white">
        <div class="chat-detail-header text-center ">
            <span class="fs-5">Chat detail </span>
        </div>
        <div class="text-center mt-4">
            <img id="chat-detail-avatar" src="#" class="avatar-xl rounded-circle"  alt="">
            <div>
                <h5 class="mt-3" id="chat-detail-name"></h5>
            </div>
        </div>
        <div id="chat-detail-content" class="px-4 ">
           
        </div>
    </div>
</div>

@section Scripts {
<script src="~/js/chatting.js" asp-append-version="true"></script>
<script>
    $(function () {
        $('#chatList').on('click', '.chat-item', function (e) {
            e.preventDefault();
            $('.chat-item').removeClass('active');
            $(this).addClass('active');
        });
        fetchChatItem();
        function fetchChatItem() {
            $('#loading-spinner').show();
            $('#chat-messages').children().not('#loading-spinner').hide();
            $.ajax({
                url: API_URL + '/api/Message/list-chat',
                type: 'GET',
                contentType: 'application/json',
                success: function (result) {
                    if (result.success) {
                        var data = result.data;
                        var chatList = $('#chatList');
                        chatList.empty();
                        data.forEach(function (item, index) {
                            var contentSlice = "";
                            if (item.contentPreview != null) {
                                contentSlice = item.contentPreview.length > 20 ? item.contentPreview.slice(0, 18) + "..." : item.contentPreview;
                            }
                            var chatItem = $(`
                                <a href="#" class="list-group-item border-0 list-group-item-action text-white d-flex gap-2 align-items-center chat-item ${index === 0 ? 'active' : ''}" onclick="openChat(${item.id},'${item.name}', '${item.avatar}',${item.type})">
                                    <img src="${item.avatar}" width="40" class="avatar" alt="">
                                    <div class="flex-grow-1">
                                        <div class="d-flex justify-content-between">
                                            <strong>${item.name}</strong>
                                            <small class="text-muted">${timeToNow(item.time)}</small>
                                        </div>
                                            <div class="text-muted text-truncate">${contentSlice}</div>
                                    </div>
                                </a>
                            `);

                            chatList.append(chatItem);
                        });

                        if (data.length > 0) {
                            if (data[0].type == 0) {
                                fetchMessageUser(data[0].id)
                            } else if (data[0].type == 1) {
                                fetchMessageInGroup(data[0].id)
                            }
                        } else {
                            $('#loading-spinner').hide();
                            $('#chat-messages').children().not('#loading-spinner').show();
                        }
                    } else {
                        console.error(result.message);
                    }
                },
                error: function (error) {
                    console.error("Error fetching chat items:", error);
                }
            })
        }
    });

    $('#btn-open-chat-detail').on('click', function (e) {
        $('#chat-detail').toggleClass('d-none');
        const isHidden = $('#chat-detail').hasClass('d-none');
        type = $('#chat-type').val();

        $('#chat-detail-avatar').attr('src', $('#chat-avatar').attr('src'));
		$('#chat-detail-name').text($('#chat-name').text());
        console.log(type);
        if (type == 0) {
            fetchMessageUser(id);
        } else if (type == 1) {
            getChatGroupDetails();
        }


        const iconClass = isHidden ? 'bi bi-chevron-double-left' : 'bi bi-chevron-double-right';
        $(this).html(`<i class="${iconClass} fs-6"></i>`);
    });

    function getChatUserDetails(){
        $.ajax({
            url: API_URL + `/api/Group/detail/${chatId.val()}`,
			type: 'GET',
			contentType: 'application/json',
			success: function (result) {
            },
			error: function (error) {
				console.error("Error fetching chat items:", error);
			},
        });
    }

    function getChatGroupDetails(){
        $.ajax({
            url: API_URL + `/api/Group/detail/${chatId.val()}`,
            type: 'GET',
            contentType: 'application/json',
            success: function (result) {
                if (result.success) {
                    var data = result.data;
                    var chatDetailContent = $('#chat-detail-content');
                        chatDetailContent.empty();

                    var btnAdd = '';
                    var btnEdit = '';
                    if(data.isAdmin){
                        btnEdit = `<div class="text-center">
                                    <button class="btn btn-transparent shadow-none rounded-circle">
                                            <i class="bi bi-pencil-square fs-4"></i>
                                    </button>
                                </div>`
                    }

                        console.log(data);

                    if(data.isPrivate && data.isAdmin){
                        btnAdd = `<div class="text-center">
                                    <button class="btn btn-transparent shadow-none rounded-circle">
                                        <i class="bi bi-person-plus-fill fs-4"></i>
                                    </button>
                                </div>`
                    }else if( !data.isPrivate){
                        btnAdd = `<div class="text-center">
                                    <button class="btn btn-transparent shadow-none rounded-circle">
                                        <i class="bi bi-person-plus-fill fs-4"></i>
                                    </button>
                                </div>`
                    }

                  

                    var detail  = `<div class="text-center">
                                        <span class="text-muted">Private</span>
                                    </div>
                                    <div class="d-flex justify-content-center">
                                        ${btnAdd}
                                        ${btnEdit}
                                    </div>
                                    
                                    <div class="chat-item p-2">
                                        <i class="bi bi-people-fill fs-4"></i>
                                        <span>${data.memberCount} Members </span>
                                    </div>
                                    <div >
                                        <h5>Files</h5>
                                            <div id="chat-detail-files" class="chat-detail-files d-grid gap-3" style="grid-template-columns: repeat(4, 1fr);" >`;


                                for (var i = 0; i < data.messages.length; i++) {
                                    var message = data.messages[i];
                                    switch (message.type) {
                                        case 1: 
                                            detail += `<div class="file-item">
                                                            <img src="${message.content}" class="w-100 rounded shadow object-fit-cover" alt="">
                                                        </div>`;
                                            break;
                                        case 2:
                                            detail += `<div class="file-item">
                                                            <video  class="w-100 rounded shadow">
                                                                <source src="${message.content}" type="video/mp4" />
                                                            </video>
                                                        </div>`;
                                            break;
                                        case 3:
                                            detail += `<div class="file-item">
                                                            <audio controls class="w-100">
                                                                <source src="${message.content}" type="audio/mpeg" />
                                                            </audio>
                                                        </div>`;
                                            break;
                                        case 4: 
                                            const lastSegment = message.content.split('/').pop();
                                            let filename = lastSegment.replace(/_(.*?)\./, '.');
                                            const dotIndex = filename.lastIndexOf('.');
                                            let name = filename.substring(0, dotIndex);
                                            let ext = filename.substring(dotIndex);
                                            if (name.length > 10) {
                                                name = name.substring(0, 10) + '...';
                                                filename = name + ext;
                                            }

                                            detail += `<div class="file-item">
                                                            <a href="${message.content}" download target="_blank" class="text-white text-decoration-none">
                                                                <i class="bi bi-file-earmark-text-fill fs-2"></i>
                                                                <div>${filename}</div>
                                                            </a>
                                                        </div>`;
                                            break;
                                    }
                                }

                            detail += `</div>
                                    </div>
                                `;



                     chatDetailContent.append(detail);
                }
            },
            error: function (error) {
                console.error("Error fetching chat items:", error);
            },
        });
    }
</script>
}

